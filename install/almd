#!/usr/bin/env bash
# Almandine CLI wrapper script
# Finds a suitable Lua interpreter and runs ~/.almd/src/main.lua with all arguments.
# Compatible with macOS and Linux.

# Deferred self-update logic (POSIX)
SCRIPT_DIR="$(dirname "$0")"
UPDATE_PENDING="$SCRIPT_DIR/update_pending"
NEXT_DIR="$SCRIPT_DIR/next"
if [ -f "$UPDATE_PENDING" ] && [ -d "$NEXT_DIR" ]; then
  echo "Applying deferred update..."
  rm -rf "$SCRIPT_DIR/src"
  [ -f "$SCRIPT_DIR/almd" ] && rm -f "$SCRIPT_DIR/almd"
  [ -f "$SCRIPT_DIR/almd.ps1" ] && rm -f "$SCRIPT_DIR/almd.ps1"
  cp -r "$NEXT_DIR/src" "$SCRIPT_DIR/"
  # The release zip contains install scripts under src/install/, not install/ at root
  cp "$NEXT_DIR/src/install/almd" "$SCRIPT_DIR/" 2>/dev/null || true
  cp "$NEXT_DIR/src/install/almd.ps1" "$SCRIPT_DIR/" 2>/dev/null || true
  rm -rf "$NEXT_DIR" "$UPDATE_PENDING"
  # Print update success and new version
  LUA_BIN=""
  find_lua_version() {
    for cmd in lua lua5.4 lua5.3 lua5.2 lua5.1 luajit; do
      if command -v "$cmd" >/dev/null 2>&1; then
        LUA_BIN="$cmd"
        break
      fi
    done
    if [ -n "$LUA_BIN" ]; then
      VERSION=$($LUA_BIN -e "local ok,v=pcall(require,'almd_version'); print(ok and v and v.VERSION or _VERSION)" 2>/dev/null)
      if [ -n "$VERSION" ]; then
        echo "Almandine CLI updated successfully! New version: $VERSION"
      else
        echo "Almandine CLI updated successfully! (version unknown)"
      fi
    else
      echo "Almandine CLI updated successfully! (Lua not found to check version)"
    fi
  }
  find_lua_version
fi

find_lua() {
  for cmd in lua lua5.4 lua5.3 lua5.2 lua5.1 luajit; do
    if command -v "$cmd" >/dev/null 2>&1; then
      echo "$cmd"
      return 0
    fi
  done
  return 1
}

LUA_BIN=$(find_lua)
if [ -z "$LUA_BIN" ]; then
  echo "Error: No suitable Lua interpreter found (lua, lua5.4, lua5.3, lua5.2, lua5.1, or luajit required)." >&2
  exit 1
fi

# Always use ~/.almd as the app home
APP_HOME="$HOME/.almd"
MAIN="$APP_HOME/src/main.lua"
LUA_PATH_PREFIX="$APP_HOME/src/?.lua;$APP_HOME/src/lib/?.lua;"
LUA_CPATH_PREFIX="$APP_HOME/src/?.so;$APP_HOME/src/lib/?.so;"

if [ -n "$LUA_PATH" ]; then
  export LUA_PATH="$LUA_PATH_PREFIX$LUA_PATH"
else
  export LUA_PATH="$LUA_PATH_PREFIX;"
fi

if [ -n "$LUA_CPATH" ]; then
  export LUA_CPATH="$LUA_CPATH_PREFIX$LUA_CPATH"
else
  export LUA_CPATH="$LUA_CPATH_PREFIX;"
fi

exec "$LUA_BIN" "$MAIN" "$@"
EXIT_CODE=$?
exit $EXIT_CODE
